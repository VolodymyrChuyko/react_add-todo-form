{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","completed","title","classNames","TodoList","todos","map","username","generateId","reduce","max","findUserByID","usersFromServer","find","initialTodos","userId","App","useState","setTodos","setTitle","selectedUser","setSelectedUser","requireValidTitle","setRequireValidTitle","requireValidUser","setRequireValidUser","action","method","onSubmit","event","preventDefault","isValidTitle","replace","isValidSelect","prevTodos","htmlFor","type","placeholder","value","onChange","input","target","length","test","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2a10011.chunk.js","sourcesContent":["import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\n\nimport './TodoInfo.scss';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user ? (\n        <UserInfo user={user} />\n      ) : (\n        'Add user'\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\n\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\n\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst generateId = (todos: Todo[]) => {\n  const maxId = todos.reduce((max, todo) => {\n    return todo.id > max ? todo.id : max;\n  }, 0);\n\n  return maxId + 1;\n};\n\nconst findUserByID = (id: number) => {\n  return usersFromServer.find(user => user.id === id) || null;\n};\n\nconst initialTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserByID(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(initialTodos);\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [requireValidTitle, setRequireValidTitle] = useState(false);\n  const [requireValidUser, setRequireValidUser] = useState(false);\n\n  const handleAddTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const isValidTitle = title.replace(/\\s/g, '');\n    const isValidSelect = selectedUser !== 0;\n\n    if (!isValidTitle) {\n      setTitle('');\n      setRequireValidTitle(true);\n    }\n\n    if (!isValidSelect) {\n      setRequireValidUser(true);\n    }\n\n    if (isValidTitle && isValidSelect) {\n      setTodos(prevTodos => [\n        ...prevTodos,\n        {\n          id: generateId(prevTodos),\n          title,\n          completed: false,\n          userId: selectedUser,\n          user: findUserByID(selectedUser),\n        },\n      ]);\n      setTitle('');\n      setSelectedUser(0);\n    }\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const input = event.target.value[event.target.value.length - 1];\n    const isValidInput = /[a-zа-яё\\d\\s]/gi.test(input);\n\n    if (isValidInput) {\n      setTitle(event.target.value);\n    }\n\n    setRequireValidTitle(false);\n  };\n\n  const handleSelectUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(Number(event.target.value));\n    setRequireValidUser(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddTodo}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleChangeTitle}\n          />\n\n          {requireValidTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"userSelect\"\n            value={selectedUser}\n            onChange={handleSelectUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {requireValidUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}